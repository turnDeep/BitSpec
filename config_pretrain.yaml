# config_pretrain.yaml
"""
PCQM4Mv2事前学習とファインチューニングの設定ファイル
"""

# プロジェクト設定
project:
  name: "BitSpec_Pretrain"
  description: "PCQM4Mv2 Pretraining for Mass Spectrum Prediction"
  version: "1.0.0"

# データ設定
data:
  nist_msp_path: "data/NIST17.MSP"
  mol_files_dir: "data/mol_files"
  output_dir: "data/processed"
  train_split: 0.8
  val_split: 0.1
  test_split: 0.1
  max_mz: 1000
  mz_bin_size: 1.0
  min_intensity: 0.001

# モデル設定
model:
  type: "GCN"
  node_features: 48   # BitSpecの現在の設定
  edge_features: 6    # BitSpecの現在の設定
  hidden_dim: 256
  num_layers: 5
  spectrum_dim: 1000
  dropout: 0.1
  pooling: "attention"

  # GCN固有の設定
  gcn:
    conv_type: "GCNConv"
    activation: "relu"
    batch_norm: true
    residual: true

# 事前学習設定
pretraining:
  # データセット設定
  dataset: "PCQM4Mv2"
  data_path: "data/"
  task: "homo_lumo_gap"  # homo_lumo_gap または multi_task

  # 訓練設定
  batch_size: 256
  num_epochs: 100
  num_workers: 4
  learning_rate: 0.001
  weight_decay: 0.0001

  # スケジューラ
  scheduler_t0: 10
  scheduler_tmult: 2

  # 混合精度訓練
  use_amp: true

  # 保存設定
  checkpoint_dir: "checkpoints/pretrain"
  save_interval: 10

  # デバッグ用（小さなサブセットで試す場合）
  use_subset: null  # 例: 10000 でテスト用に10000サンプルのみ使用

  # Weights & Biases
  use_wandb: false
  wandb_project: "bitspec-pretraining"

  # 学習する層の制御
  freeze_layers: []  # 事前学習では全層を学習

# ファインチューニング設定
finetuning:
  # 事前学習済みモデル
  pretrained_checkpoint: "checkpoints/pretrain/pretrained_backbone.pt"

  # バックボーン凍結設定
  freeze_backbone: false  # true: バックボーン全体を凍結
  freeze_layers: 0        # 下位N層を凍結（0で凍結なし）

  # 異なる学習率
  backbone_lr: 0.0001     # 事前学習済み層は低学習率
  head_lr: 0.001          # 新規層（spectrum_predictor）は高学習率
  learning_rate: 0.001    # デフォルト学習率

  # 訓練設定
  batch_size: 32
  num_epochs: 200
  num_workers: 4
  weight_decay: 0.0001

  # スケジューラ
  scheduler_t0: 10
  scheduler_tmult: 2

  # 混合精度訓練
  use_amp: true

  # 損失関数
  loss_tolerance: 0.1

  # 保存設定
  checkpoint_dir: "checkpoints/finetune"
  save_interval: 10

  # Weights & Biases
  use_wandb: false
  wandb_project: "bitspec-finetuning"

# GPU設定 (RTX 50シリーズ対応)
gpu:
  use_cuda: true
  device_ids: [0]
  mixed_precision: true
  compile: false  # 事前学習では無効化（互換性のため）
  compile_mode: "reduce-overhead"

  # RTX 50シリーズ固有の設定
  rtx50:
    enable_compat: true
    force_sm90_emulation: false

# ロギング設定
logging:
  use_tensorboard: false
  use_wandb: false
  log_dir: "logs"
  log_every: 10

# 評価設定
evaluation:
  metrics:
    - "cosine_similarity"
    - "mse"
    - "mae"
    - "recall_at_k"
  recall_k_values: [1, 5, 10, 20]

# ベンチマーク設定（実験用）
benchmark:
  # 比較実験
  experiments:
    - name: "random_init"
      description: "ランダム初期化（ベースライン）"
      use_pretrain: false

    - name: "pretrain_homo_lumo"
      description: "HOMO-LUMO gap事前学習"
      use_pretrain: true
      pretrain_task: "homo_lumo_gap"

    - name: "pretrain_multitask"
      description: "マルチタスク事前学習"
      use_pretrain: true
      pretrain_task: "multi_task"

  # データ量を変えた性能評価
  data_fractions: [0.25, 0.5, 0.75, 1.0]

  # 凍結戦略の比較
  freeze_strategies:
    - name: "no_freeze"
      freeze_backbone: false
      freeze_layers: 0

    - name: "freeze_all"
      freeze_backbone: true
      freeze_layers: 0

    - name: "freeze_3_layers"
      freeze_backbone: false
      freeze_layers: 3
